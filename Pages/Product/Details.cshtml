@page
@model Examensarbete.Pages.Product.DetailsModel

@{
    ViewData["Title"] = "Produktdetaljer";
    ViewData["IsAdminSection"] = true;
}

<div class="mt-3 mb-2">

    <!-- Rubrik -->
    <h4 class="mt-3 mb-3">@Model.Product.Name</h4>

    <!-- Första raden med info och material -->
    <div class="row g-2">

        <!-- Produktinformation-->
        <div class="col-md-8">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-baseline justify-content-start mb-1">
                        <h4 class="card-title me-1">Produktinformation</h4>
                        <a class="small text-primary" style="cursor:pointer; text-decoration: underline;" data-bs-toggle="modal" data-bs-target="#productModal">Ändra</a>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <ul>
                                <li><strong>Artikelnummer:</strong> @Model.Product.ArticleNumber</li>
                                <li><strong>Pris per enhet:</strong> @Model.Product.PricePerUnit kr</li>
                                <li><strong>Vikt per enhet:</strong> @Model.Product.WeightPerUnit g</li>
                            </ul>
                        </div>
                        <div class="col-md-6 d-flex align-items-center">
                            <ul>
                                <li>
                                    <strong>Status:</strong>
                                    <span class="badge @(Model.Product.IsInactive ? "bg-secondary" : "bg-success")" style="padding: .2em .4em; font-size: .9em;">
                                        @(Model.Product.IsInactive ? "Inaktiv" : "Aktiv")
                                    </span>
                                </li>
                                <li>
                                    <strong>Komplett:</strong>
                                    <span class="badge @(Model.Product.IsIncomplete ? "bg-secondary" : "bg-success")" style="padding: .2em .4em; font-size: .9em;">
                                        @(Model.Product.IsIncomplete ? "Nej" : "Ja")
                                    </span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Material -->
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-baseline justify-content-start mb-1">
                        <h4 class="card-title me-1">Material</h4>
                        <a class="small text-primary" style="cursor:pointer; text-decoration: underline;" data-bs-toggle="modal" data-bs-target="#materialModal">Ändra</a>
                    </div>
                    <ul>
                        <li>
                            <strong>Produktmaterial</strong>
                            <ul>
                                @if (Model.ProductMaterials != null)
                                {
                                    foreach (var material in Model.ProductMaterials)
                                    {
                                        <li>@material.MaterialName - @material.Percentage%</li>
                                    }
                                }
                                else
                                {
                                    <li>Inga material tillagda.</li>
                                }
                            </ul>
                        </li>
                        <li class="mt-2">
                            <strong>Förpackningsmaterial</strong>
                            <ul>
                                <li>@(Model.Product.PackagingMaterial?.Type ?? "Inget material valt")</li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Andra raden med miljö och kategorier -->
    <div class="row g-2 mt-1">

        <!-- Miljöinformation-->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-baseline justify-content-start">
                        <h4 class="card-title me-1">Miljöinformation</h4>
                        <a class="small text-primary" style="cursor:pointer; text-decoration: underline;" data-bs-toggle="modal" data-bs-target="#environmentModal">Ändra</a>
                    </div>
                    <ul>
                        <li><strong>Återvinningsgrad vid EoL:</strong> @Model.Product.RecyclingRateAtEoL</li>
                        <li class="mt-2">
                            <strong>Utsläpp</strong>
                            <ul>
                                <li><strong>Per enhet:</strong> @(Model.Product.TotalClimateImpactPerUnit)%</li>
                                <li><strong>Cradle to gate:</strong> @(Model.Product.TotalClimateImpactCradleToGate)%</li>
                                <li><strong>Impact EoL:</strong> @(Model.Product.TotalClimateImpactImpactEoL)%</li>
                                <li><strong>Förpackningsmaterial:</strong> @(Model.Product.TotalClimateImpactPackagingMaterial)%</li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Kategorier-->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-baseline justify-content-start">
                        <h4 class="card-title me-1">Kategorier</h4>
                        <a class="small text-primary" style="cursor:pointer; text-decoration: underline;" data-bs-toggle="modal" data-bs-target="#categoryModal">Ändra</a>
                    </div>
                    <ul>
                        @if (Model.ProductCategories != null && Model.ProductCategories.Any())
                        {
                            foreach (var category in Model.ProductCategories)
                            {
                                <li>@category.Name</li>
                            }
                        }
                        else
                        {
                            <li>Inga kategorier tillagda.</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Knappar under cards-->
<div class="row">
    <div class="col d-flex justify-content-between">
        <div>
            <a asp-page="./Index" class="btn btn-secondary">Gå tillbaka</a>
        </div>
        <div>
            <form method="post" asp-page-handler="ToggleInactive" asp-route-id="@Model.Product.Id" class="d-inline">
                <button type="submit" class="btn btn-warning">
                    @(Model.Product.IsInactive ? "Aktivera" : "Inaktivera")
                </button>
            </form>
            <form method="post" asp-page-handler="Delete" asp-route-id="@Model.Product.Id" onsubmit="return confirm('Är du säker på att du vill ta bort denna produkt?')" class="d-inline">
                <button class="btn btn-danger" type="submit">
                    Ta bort
                </button>
            </form>
        </div>
    </div>
</div>



<!-- Modaler & Styles -->

<style>
    .environment-info ul {
        list-style-type: none;
        padding: 0;
    }

        .environment-info ul ul {
            list-style-type: disc;
            padding-left: 20px;
        }

    .environment-info h2 {
        margin-bottom: 0.5rem;
    }
</style>

<!-- Material modal -->
<div class="modal fade" id="materialModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Ändra material</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="UpdateMaterials">
                    <!-- Gömda inputs -->
                    <input type="hidden" asp-for="Product.Id" />
                    <input type="hidden" id="removed-material-ids" name="RemovedMaterialIds" />
                    <select id="material-options" hidden>
                        @foreach (var option in Model.MaterialOptions)
                        {
                            <option value="@option.Value">@option.Text</option>
                        }
                    </select>

                    <!-- Befintliga material -->
                    <h6 class="fw-bold">Befintliga material</h6>
                    <div id="existing-materials-container">
                        @for (int i = 0; i < Model.ProductMaterials.Count; i++)
                        {
                            var material = Model.ProductMaterials[i];
                            <div class="existing-material-item">
                                <!-- Material Dropdown-->
                                <div class="row mb-1">
                                    <div class="col-md-9">
                                        <select name="UpdatedMaterials[@i].MaterialId" class="form-control material-select">
                                            <option value="">Välj material</option>
                                            @foreach (var option in Model.MaterialOptions)
                                            {
                                                @if (option.Value == material.MaterialId.ToString())
                                                {
                                                    <option value="@option.Value" selected>@option.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@option.Value">@option.Text</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <!-- Ta bort-knapp -->
                                    <div class="d-flex align-items-center col-md-3">
                                        <button type="button" class="btn btn-danger btn-sm remove-material-button" data-material-id="@material.MaterialId">Ta bort</button>
                                    </div>
                                </div>
                                <!-- Procentandel -->
                                <div class="col-md-3 mb-3">
                                    <div class="input-group">
                                        <input type="number" name="UpdatedMaterials[@i].Percentage" class="form-control material-percentage" value="@material.Percentage" placeholder="%" />
                                        <div class="input-group-append">
                                            <span class="input-group-text">%</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Lägg till nytt material -->
                    <div id="new-materials-container" class="row mb-2"></div>
                    <!-- Knapp för att lägga till nytt material -->
                    <div class="d-flex justify-content-center">
                        <button type="button" class="btn btn-secondary mb-2" id="add-material-button">Lägg till nytt material</button>
                    </div>

                    <hr />
                    <!-- Lägg till förpackningsmaterial -->
                    <h6 class="fw-bold">Förpackningsmaterial</h6>
                    <div class="row">
                        <div class="col-md-9 mb-2">
                            <select asp-for="Product.PackagingMaterialId" class="form-control mb-2" asp-items="Model.MaterialOptions">
                                <option value="">Välj förpackningsmaterial</option>
                            </select>
                        </div>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stäng</button>
                        <button type="submit" class="btn btn-primary">Spara ändringar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Produktinformation modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Ändra produktinformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="productForm" asp-page-handler="UpdateProduct">
                <div class="modal-body">
                    <input type="hidden" asp-for="Product.Id" />
                    <div class="mb-3">
                        <label for="productName" class="form-label">Namn</label>
                        <input type="text" class="form-control" id="productName" asp-for="Product.Name" />
                    </div>
                    <div class="mb-3">
                        <label for="productArticleNumber" class="form-label">Artikelnummer</label>
                        <input type="text" class="form-control" id="productArticleNumber" asp-for="Product.ArticleNumber" />
                    </div>
                    <div class="mb-3">
                        <label for="productWeightPerUnit" class="form-label">Vikt per enhet</label>
                        <input type="text" class="form-control" id="productWeightPerUnit" asp-for="Product.WeightPerUnit" />
                    </div>
                    <div class="mb-3">
                        <label for="productPricePerUnit" class="form-label">Pris per enhet</label>
                        <input type="number" class="form-control decimal-input" id="productPricePerUnit" asp-for="Product.PricePerUnit" step="0.01" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stäng</button>
                    <button type="submit" class="btn btn-primary">Spara ändringar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Miljö modal -->
<div class="modal fade" id="environmentModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Ändra information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Här ska content in -->
                <p>Miljö</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stäng</button>
                <button type="button" class="btn btn-primary">Spara ändringar</button>
            </div>
        </div>
    </div>
</div>

<!-- Kategorier modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Ändra kategorier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" id="category-form" asp-page-handler="UpdateCategories">
                    <input type="hidden" asp-for="Product.Id" />

                    <!-- Befintliga kategorier -->
                    <h6 class="fw-bold">Befintliga kategorier</h6>
                    <div id="existing-categories-container">
                        @foreach (var category in Model.ProductCategories)
                        {
                            <div class="existing-category-item" data-category-id="@category.Id">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>@category.Name</span>
                                </div>
                            </div>
                        }
                    </div>

                    <hr />
                    <!-- Huvudkategorier -->
                    <div class="mb-3">
                        <label for="mainCategory" class="form-label fw-bold">Huvudkategori</label>
                        <select id="mainCategory" class="form-control">
                            <option value="">Välj huvudkategori</option>
                            @foreach (var category in Model.MainCategories)
                            {
                                <option value="@category.Value">@category.Text</option>
                            }
                        </select>
                    </div>

                    <!-- Underkategorier -->
                    <div class="mb-3">
                        <label for="subCategory" class="form-label fw-bold">Underkategori</label>
                        <select id="subCategory" class="form-control">
                            <option value="">Välj underkategori</option>
                        </select>
                    </div>

                    <!-- Under-underkategorier -->
                    <div class="mb-3">
                        <label for="subSubCategory" class="form-label fw-bold">Under-underkategori</label>
                        <select id="subSubCategory" class="form-control">
                            <option value="">Välj under-underkategori</option>
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Stäng</button>
                        <button type="submit" class="btn btn-primary" id="save-categories-button">Spara ändringar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const removedMaterialIds = [];
            const mainCategorySelect = document.getElementById('mainCategory');
            const subCategorySelect = document.getElementById('subCategory');
            const subSubCategorySelect = document.getElementById('subSubCategory');
            const saveCategoriesButton = document.getElementById('save-categories-button');
            const categoryForm = document.getElementById('category-form');

            // Funktion för att hantera borttagning av material
            document.querySelectorAll('.remove-material-button').forEach(button => {
                button.addEventListener('click', function () {
                    const materialId = parseInt(this.getAttribute('data-material-id'));

                    if (materialId) {
                        // Lägg till materialId till removedMaterialIds
                        removedMaterialIds.push(materialId);

                        // Uppdatera värdet i det dolda inputfältet
                        let removedMaterialIdsInput = document.getElementById('removed-material-ids');
                        removedMaterialIdsInput.value = removedMaterialIds.join(',');

                        // Kontrollera att värdet i inputfältet uppdateras korrekt.
                        console.log('Updated removedMaterialIds:', removedMaterialIdsInput.value);

                        // Ta bort material från DOM
                        this.closest('.existing-material-item').remove();
                    }
                });
            });

            // Funktion för att lägga till nytt material
            document.getElementById('add-material-button').addEventListener('click', function () {
                const container = document.getElementById('new-materials-container');

                const index = container.querySelectorAll('.new-material-item').length;
                const newItem = document.createElement('div');
                newItem.classList.add('new-material-item');
                newItem.innerHTML = `
                            <div class="row mb-1">
                                <div class="col-md-9">
                                    <select name="NewMaterials[${index}].MaterialId" class="form-control material-select">
                                        <option value="">Välj material</option>
                                        ${Array.from(document.querySelectorAll('#material-options option')).map(opt => `<option value="${opt.value}">${opt.text}</option>`).join('')}
                                    </select>
                                </div>
                                <div class="d-flex align-items-center col-md-3">
                                    <button type="button" class="btn btn-danger btn-sm remove-material-button" onclick="this.parentElement.parentElement.parentElement.remove()">Ta bort</button>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="input-group">
                                    <input type="number" name="NewMaterials[${index}].Percentage" class="form-control material-percentage" placeholder="%" />
                                    <div class="input-group-append">
                                        <span class="input-group-text">%</span>
                                    </div>
                                </div>
                            </div>
                        `;
                container.appendChild(newItem);
            });

            // Funktion för att hämta underkategorier när en huvudkategori väljs
            mainCategorySelect.addEventListener('change', function () {
                const mainCategoryId = this.value;
                subCategorySelect.innerHTML = '<option value="">Välj underkategori</option>';
                subSubCategorySelect.innerHTML = '<option value="">Välj under-underkategori</option>';

                if (mainCategoryId) {
                    fetch(`/api/categories/subcategories/${mainCategoryId}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data && data.$values && Array.isArray(data.$values)) {
                                data.$values.forEach(subCategory => {
                                    const option = document.createElement('option');
                                    option.value = subCategory.id;
                                    option.text = subCategory.name;
                                    subCategorySelect.appendChild(option);
                                });
                            } else {
                                console.error('Expected an array but got:', data);
                            }
                        })
                        .catch(error => console.error('Error fetching subcategories:', error));
                }
            });

            // Funktion för att hämta under-underkategorier när en underkategori väljs
            subCategorySelect.addEventListener('change', function () {
                const subCategoryId = this.value;
                subSubCategorySelect.innerHTML = '<option value="">Välj under-underkategori</option>';

                if (subCategoryId) {
                    fetch(`/api/categories/subcategories/${subCategoryId}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data && data.$values && Array.isArray(data.$values)) {
                                data.$values.forEach(subSubCategory => {
                                    const option = document.createElement('option');
                                    option.value = subSubCategory.id;
                                    option.text = subSubCategory.name;
                                    subSubCategorySelect.appendChild(option);
                                });
                            } else {
                                console.error('Expected an array but got:', data);
                            }
                        })
                        .catch(error => console.error('Error fetching sub-subcategories:', error));
                }
            });

            // Hantera spara-knappen och visa bekräftelsedialog
            saveCategoriesButton.addEventListener('click', function () {
                if (confirm('Vill du verkligen ändra kategorier för denna produkt?')) {
                    const addedCategoryIds = [
                        document.getElementById('mainCategory').value,
                        document.getElementById('subCategory').value,
                        document.getElementById('subSubCategory').value
                    ].filter(id => id).join(',');

                    const addedCategoryIdsInput = document.createElement('input');
                    addedCategoryIdsInput.type = 'hidden';
                    addedCategoryIdsInput.name = 'addedCategoryIds';
                    addedCategoryIdsInput.value = addedCategoryIds;
                    categoryForm.appendChild(addedCategoryIdsInput);

                    categoryForm.submit();
                }
            });
        });
    </script>
}
