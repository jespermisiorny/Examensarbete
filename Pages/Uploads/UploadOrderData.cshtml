@page
@model Examensarbete.Pages.Uploads.UploadOrderDataModel
@using System.Text.Json
@{
    ViewData["Title"] = "Ladda upp orderdata";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<div class="container mt-5">

    <!-- Orderdata formulär -->
    @if (!Model.Success && Model.ShowUploadForm)
    {
        <div class="row justify-content-center">
            <div class="col-md-6 text-center">
                <h1 class="mb-5 mt-5">Ladda upp orderdata</h1>

                <!-- Knappar för att ladda upp dokument -->
                <form method="post" enctype="multipart/form-data" asp-page-handler="UploadOrderData">
                    <input type="file" name="fileUpload" />
                    <button type="submit" class="btn btn-primary btn-block">Ladda upp</button>
                </form>
            </div>
        </div>
    }

    <!-- Error Alert -->
    <div class="row justify-content-center">
        <div class="col-md-3">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger text-center mb-5" role="alert">
                    @Html.Raw(errorMessage)
                </div>

                <!-- Knapp för att resetta sidan -->
                <div class="d-flex flex-column align-items-center">
                    <a href="~/uploads/UploadOrderData" class="btn btn-primary mb-2">Ladda upp en ny fil</a>
                </div>
            }
        </div>
    </div>

    @if (Model.Success && Model.UploadedData.Any())
    {
        <!-- Rubrik -->
        <div class="row justify-content-center mb-3">
            <div class="col-md-6 text-center">
                <h1>Senaste uppladdningen</h1>
            </div>
        </div>

        <!-- Success Alert -->
        <div class="row justify-content-center">
            <div class="col-md-3">
                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success text-center mb-5" role="alert">
                        @Html.Raw(successMessage)
                    </div>
                }
            </div>
        </div>

        <!-- Info Alert -->
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div id="success-alert" class="alert alert-info text-center" role="alert">
                    @{
                        var unmatchedCount = Model.UploadedData.Count(od => !od.ProductId.HasValue);
                    }
                    @if (unmatchedCount > 0)
                    {
                        <div id="unmatched-message">
                            <p class="mt-3">
                                Det finns <span id="unmatched-count">@unmatchedCount</span> rader som inte kunde matchas.
                                <br />
                                Vill du skapa ofullständiga produkter för alla?
                            </p>

                            <!-- Skapa alla omatchade-knapp -->
                            <div id="create-all-container">
                                <form method="post" asp-page-handler="CreateAllIncompleteProducts" id="create-all-incomplete-products-form">
                                    <button type="submit" class="btn btn-sm btn-primary">Skapa alla produkter</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Tabell över uppladdad data -->
        <div class="card-body">
            <table class="table" id="orderDataTable">
                <thead>
                    <tr>
                        <th class="text-center">Id</th>
                        <th class="text-center">Datum</th>
                        <th class="text-center">Beskrivning</th>
                        <th class="text-center">Artikelnummer</th>
                        <th class="text-center">Matchad</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.UploadedData)
                    {
                        <tr data-product-id="@item.Id">
                            <td class="text-center">@item.Id</td>
                            <td class="text-center">@item.OrderDate.ToShortDateString()</td>
                            <td>
                                @if (item.ItemDescription.Length > 75)
                                {
                                    @Html.Raw(item.ItemDescription.Substring(0, 75) + "...")
                                }
                                else
                                {
                                    @item.ItemDescription
                                }
                            </td>
                            <td class="text-center">@item.ArticleNumber</td>
                            <td class="text-center match-cell">
                                @if (item.ProductId.HasValue)
                                {
                                    <text>Ja</text>
                                }
                                else
                                {
                                    <form method="post" asp-page-handler="CreateIncompleteProduct" asp-route-id="@item.Id" data-ajax="true">
                                        <button type="submit" class="btn btn-sm btn-primary">Skapa produkt</button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Grupp av knappar -->
        <div class="row mt-5">
            <div class="d-flex justify-content-between w-100">

                <!-- Knapp för att ladda upp ny fil, placerad till vänster -->
                <div>
                    <a href="~/uploads/UploadOrderData" class="btn btn-primary me-2">Ladda upp en ny fil</a>
                </div>

                <!-- Knappar för att navigera, placerade till höger -->
                <div>
                    <a asp-page="../Review" class="btn btn-primary">Gå till Orderdata</a>
                    <a asp-page="/Product/Index" class="btn btn-primary">Gå till Produkter</a>
                </div>
            </div>
        </div>

    }
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/v/bs5/dt-2.0.2/b-3.0.1/date-1.5.2/r-3.0.0/sl-2.0.0/datatables.min.js"></script>
    <link href="https://cdn.datatables.net/v/bs5/dt-2.0.2/b-3.0.1/date-1.5.2/r-3.0.0/sl-2.0.0/datatables.min.css" rel="stylesheet">

    <script>
        var originalUnmatchedCount = 0;

        $(document).ready(function () {
            var unmatchedCountElement = $('#unmatched-count');
            var unmatchedCount = parseInt(unmatchedCountElement.text());

            if (!isNaN(unmatchedCount) && unmatchedCount > 0) {
                originalUnmatchedCount = unmatchedCount;
            }

            var table = $('#orderDataTable').DataTable({
                "pageLength": 25
            });

            handleFormSubmission($('form[data-ajax="true"]'), singleProductSuccess, function (data, form) {
                $('#message-container').html(data.message).show();
            });

            handleFormSubmission($('#create-all-incomplete-products-form'), allProductsSuccess, function (data, form) {
                $('#success-alert').html(data.message).show();
            });
        });

        function updateUnmatchedCountAndMessage() {
            var unmatchedCountElement = $('#unmatched-count');
            var unmatchedCount = parseInt(unmatchedCountElement.text());

            if (isNaN(unmatchedCount)) {
                unmatchedCount = originalUnmatchedCount;
            }

            var newCount = unmatchedCount - 1;

            if (newCount > 0) {
                unmatchedCountElement.text(newCount);
            } else {
                var messageContainer = $('#success-alert');
                $('#unmatched-count').parent().remove();
            }
        }

        function singleProductSuccess(data, form) {
            var productRow = $(`tr[data-product-id="${data.id}"]`);
            if (productRow.length) {
                productRow.find('.match-cell').text('Ja');
                productRow.find('form').remove();
            }
            updateUnmatchedCountAndMessage();
        }

        function allProductsSuccess(data, form) {
            var successMessage = `${data.message}`;
            $('#success-alert').html(successMessage).show();
            $('#create-all-container').hide();

            $('.match-cell').each(function () {
                var cell = $(this);
                if (cell.find('form').length) {
                    cell.text('Ja');
                    cell.find('form').remove();
                }
            });
            $('form[data-ajax="true"]').remove();
            $('#message-container').html(successMessage).show();
            updateUnmatchedCountAndMessage();
        }

        function handleFormSubmission(form, successCallback, errorCallback) {
            form.on('submit', function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                var actionUrl = this.action;
                var formMethod = this.method;

                fetch(actionUrl, {
                    method: formMethod,
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            successCallback(data, form);
                        } else {
                            errorCallback(data, form);
                        }
                    })
                    .catch(error => {
                        console.error('Error during fetch operation:', error);
                        var messageContainer = $('#message-container');
                        messageContainer.html('Error while processing request.').show();
                    });
            });
        }
    </script>


}
